services:
  db:
    build:
      context: ./dockerfiles/postgres/
      dockerfile: Dockerfile
    restart: always
    expose:
      - "5432" # Internal port for other services to access
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 60s
      retries: 10
      start_period: 30s
    volumes:
      - volume_db:/var/lib/postgresql/data
      - ./conf/postgres:/docker-entrypoint-initdb.d/
    ulimits:
      nofile:
        soft: 20000
        hard: 40000
    networks:
      wso2-internal-network:
        ipv4_address: "172.18.0.2"

  am:
    build:
      context: ./dockerfiles/am/
      dockerfile: Dockerfile
      args:
        BASE_AM_IMAGE: ${AM_IMAGE}
    env_file: .env
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9443"]
      interval: 30s
      start_period: 60s
      retries: 10
    volumes:
      - ./conf/am:/home/wso2carbon/wso2-config-volume
    # No need to expose ports anymore because we use network_mode = host
    #ports:
    #  - "9443:9443"
    #- "8289:8289"
    #- "8243:8243"
    network_mode: "host"
    extra_hosts:
      - "db:172.18.0.2" # Manually map the database service's IP address
      - "DELL:127.0.0.1" # Unknown host that was in error logs while am was starting
    depends_on:
      db:
        condition: service_healthy
      is:
        condition: service_healthy

  is:
    build:
      context: ./dockerfiles/is/
      dockerfile: Dockerfile
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9444"]
      interval: 30s
      timeout: 60s
      retries: 10
      start_period: 30s
    # No need to expose porta because we use network_mode = host
    #ports:
    #  - "9444:9444"
    #      - "5005i:5005"
    command: ["-debug", "5005", "-DosgiConsole"]
    volumes:
      - ./conf/is:/home/wso2carbon/wso2-config-volume
    depends_on:
      db:
        condition: service_healthy
    network_mode: host
    extra_hosts:
      - "db:172.18.0.2"

volumes:
  volume_db:
    driver: "local" # Volume for database persistence

networks:
  wso2-internal-network:
    name: wso2-internal-network
    driver: bridge
    ipam:
      config:
        - subnet: "172.18.0.0/16" # Define a custom subnet for manual IP assignment
