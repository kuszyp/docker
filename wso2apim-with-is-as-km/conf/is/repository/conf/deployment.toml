[server]
hostname = "localhost"
offset = 1
node_ip = "127.0.0.1"
base_path = "https://$ref{server.hostname}:${carbon.management.port}"

[super_admin]
username = "admin"
password = "admin"
create_admin_account = true

[user_store]
type = "database_unique_id"

[database.identity_db]
type = "postgre"
url = "jdbc:postgresql://db:5432/wso2_identity_db"
driver = "org.postgresql.Driver"
username = "wso2dbuser"
password = "wso2dbpassword"

[database.identity_db.pool_options]
maxActive = "80"
maxWait = "360000"
minIdle = "5"
testOnBorrow = true
validationQuery = "SELECT 1; COMMIT"
validationInterval = "30000"
defaultAutoCommit = false
commitOnReturn = true

[database.shared_db]
type = "postgres"
url = "jdbc:postgresql://db:5432/wso2_shared_db"
driver = "org.postgresql.Driver"
username = "wso2dbuser"
password = "wso2dbpassword"

[database.shared_db.pool_options]
maxActive = "80"
maxWait = "360000"
minIdle = "5"
testOnBorrow = true
validationQuery = "SELECT 1; COMMIT"
validationInterval = "30000"
defaultAutoCommit = false
commitOnReturn = true

[keystore.primary]
file_name = "wso2carbon.jks"
password = "wso2carbon"

[truststore]
file_name = "client-truststore.jks"
password = "wso2carbon"
type = "JKS"

[transport.https.properties]
#proxyPort = 443
maxHttpHeaderSize = 65536

[transport.http.properties]
maxHttpHeaderSize = 65536

[account_recovery.endpoint.auth]
hash = "66cd9688a2ae068244ea01e70f0e230f5623b7fa4cdecb65070a09ec06452262"

[identity.auth_framework.endpoint]
app_password = "dashboard"

# The KeyStore which is used for encrypting/decrypting internal data. By default the primary keystore is used as the internal keystore.

#[keystore.internal]
#file_name = "$ref{keystore.primary.file_name}"
#type = "$ref{keystore.primary.type}"
#password = "$ref{keystore.primary.password}"
#alias = "$ref{keystore.primary.alias}"
#key_password = "$ref{keystore.primary.key_password}"

# The KeyStore which is used for tls communication. By default the primary keystore is used as the tls keystore.

#[keystore.tls]
#file_name = "$ref{keystore.primary.file_name}"
#type = "$ref{keystore.primary.type}"
#password = "$ref{keystore.primary.password}"
#alias = "$ref{keystore.primary.alias}"
#key_password = "$ref{keystore.primary.key_password}"

#Google reCAPTCHA settings.

#[recaptcha]
#enabled = true
#api_url = "https://www.google.com/recaptcha/api.js"
#verify_url = "https://www.google.com/recaptcha/api/siteverify"
#site_key = ""
#secret_key = ""

# SMTP email sender settings.
#[output_adapter.email]
#from_address= "abcd@gmail.com"
#username= "abcd"
#password= "xxxx"
#hostname= "smtp.gmail.com"
#port= 587

[output_adapter.email]
from_address = "from@example.com"
username = "20d1482d7407b3"
password = "a2d82e869787e1"
hostname = "sandbox.smtp.mailtrap.io"
port = 587
enable_start_tls = true
enable_euthentication = true

[authentication.jit_provisioning]
associating_to_existing_user = true
enable_enhanced_feature = true

#[[event_handler]]
#name= "welcomeEmailEventHandler"
#subscriptions =["POST_SELF_SIGNUP_REGISTER", "POST_AUTHENTICATION"]

# custom identity server as key manager configurations
#[[event_listener]]
#id = "token_revocation"
#type = "org.wso2.carbon.identity.core.handler.AbstractIdentityHandler"
#name = "org.wso2.is.notification.ApimOauthEventInterceptor"
#order = 1

#[event_listener.properties]
#notification_endpoint = "https://localhost:9443/internal/data/v1/notify"
#username = "admin"
#password = "admin"
#'header.X-WSO2-KEY-MANAGER' = "WSO2IS"


[[resource.access_control]]
context = "(.*)/keymanager-operations/user-info/claims(.*)"
secure = true
http_method = "GET"
permissions = "/permission/admin/manage/identity/usermgt/list"
scopes = "internal_user_mgt_list"

[[resource.access_control]]
context = "(.*)/keymanager-operations/user-info/claims/generate"
secure = true
http_method = "POST"
permissions = "/permission/admin/manage/identity/usermgt/list"
scopes = "internal_user_mgt_list"

[[resource.access_control]]
context = "(.*)/keymanager-operations/dcr/register"
secure = true
http_method = "POST"
permissions = "/permission/admin/manage/identity/applicationmgt/create"
scopes = "internal_application_mgt_create"

[[resource.access_control]]
context = "(.*)/keymanager-operations/dcr/register(.*)"
secure = true
http_method = "GET"
permissions = "/permission/admin/manage/identity/applicationmgt/view"
scopes = "internal_application_mgt_view"

[[resource.access_control]]
context = "(.*)/keymanager-operations/dcr/register(.*)"
secure = true
http_method = "PUT"
permissions = "/permission/admin/manage/identity/applicationmgt/update"
scopes = "internal_application_mgt_update"

[[resource.access_control]]
context = "(.*)/keymanager-operations/dcr/register(.*)"
secure = true
http_method = "DELETE"
permissions = "/permission/admin/manage/identity/applicationmgt/delete"
scopes = "internal_application_mgt_delete"

[[resource.access_control]]
context = "(.*)/keymanager-operations/dcr/register(.*)"
secure = true
http_method = "POST"
permissions = "/permission/admin/manage/identity/applicationmgt/update"
scopes = "internal_application_mgt_update"

[[resource.access_control]]
context = "(.*)/scim2/Profiles(.*)"
secure = true
http_method = "GET"
permissions = "/permission/admin/manage/identity/usermgt/list"
scopes = "internal_user_mgt_list"

[[resource.access_control]]
context = "(.*)/scim2/Profiles(.*)"
secure = true
http_method = "POST"
permissions = "/permission/admin/manage/identity/usermgt/create"
scopes = "internal_user_mgt_create"

[[resource.access_control]]
context = "(.*)/scim2/Profiles(.*)"
secure = true
http_method = "DELETE"
permissions = "/permission/admin/manage/identity/usermgt/delete"
scopes = "internal_user_mgt_delete"

[[resource.access_control]]
context = "(.*)/scim2/Me/(.*)"
secure = true
http_method = "GET"
permissions = "none"
scopes = "internal_login"

[tenant_context.rewrite]
custom_webapps = ["/keymanager-operations/"]

[admin_service.wsdl]
enable = true

[fido.trusted]
origins = ["http://localhost:9000"]

[cors]
allow_generic_http_requests = true
allow_any_origin = true
allow_subdomains = false
supported_methods = [
  "GET",
  "POST",
  "HEAD",
  "OPTIONS",
  "PUT",
  "PATCH",
  "HEAD",
  "DELETE",
  "PATCH",
]
support_any_header = true
supported_headers = []
exposed_headers = ["Location"]
supports_credentials = true
max_age = 3600
tag_requests = false

[[oauth.custom_grant_type]]
name = "profile_switch"
grant_handler = "pl.o4b.identity.user.profile.handler.ProfileSwitchGrantHandler"
grant_validator = "pl.o4b.identity.user.profile.validator.ProfileSwitchGrantValidator"

[oauth.custom_grant_type.properties]
IdTokenAllowed = false

[system_applications]
read_only_apps = []

[identity_mgt]
email_sender = "internal"

[identity_mgt.user_claim_update.email]
enable_verification = true
verification_email_validity = "1440"

[identity_mgt.user_onboarding]
ask_password_from_user = true
enable_email_verification = true
verification_email_validity = "1440"
lock_on_creation = true
ask_password_email_validity = "1440"
password_generator = "org.wso2.carbon.user.mgt.common.DefaultPasswordGenerator"

[identity_mgt.password_reset_email]
enable_password_reset_email = true


# [[event_listener]]
# [event_listener.properties]
# [tenant_context.rewrite]
# [config_data]
# [admin_console.authenticator.saml_sso_authenticator]
# [identity_mgt.events.schemas.identityUserMetadataMgtHandler.properties]
